<% @subtabs = resque.queues unless partial? || params[:id].nil? %>

<% if queue = params[:id] %>
  <% size = resque.size(queue)%>
  <h1 style="display: inline-block;">Pending jobs on <span class='hl'><%= queue %></span></h1>
  <input value="<%= params[:search] %>" name="search" type="search" placeholder="search" style="margin-left: 50px; width: 500px;" onclick="'<%= (size > 10000) %>' == 'true' && (document.querySelector('#note').style.display = 'inline-block');" onkeypress="event.keyCode == 13 && (document.location = '?search=' + this.value)">
  <div style="font-weight: bold; color: red; display: none;" id="note">Note: May not work with queues larger than 10k records.</div>
  <form method="POST" action="<%=u "/queues/#{queue}/remove" %>" class='remove-queue'>
    <input type='submit' name='' value='Remove Queue' onclick='return confirm("Are you absolutely sure? This cannot be undone.");' />
  </form>
  <p class='sub'>Showing <%= start = params[:start].to_i %> to <%= start + 20 %> of <b><%=size %></b> jobs</p>
  <%= partial :next_more, :start => start, :size => size, :per_page => 20 if params[:search].blank? %>
  <table class='jobs'>
    <tr>
      <th>Class</th>
      <th>Args</th>
    </tr>
    <% for job in (jobs = (params[:search].blank? ? resque.peek(queue, start, 20) : resque.search(queue, params[:search]))) %>
    <tr>
      <td class='class'><%= job['class'] %></td>
      <td class='args'><%=h job['args'].inspect %></td>
    </tr>
    <% end %>
    <% if jobs.empty? %>
    <tr>
      <td class='no-data' colspan='2'>There are no pending jobs in this queue</td>
    </tr>
    <% end %>
  </table>
<% else %>

  <h1 class='wi'>Queues</h1>
  <p class='intro'>The list below contains all the registered queues with the number of jobs currently in the queue. Select a queue from above to view all jobs currently pending on the queue.</p>
  <table class='queues'>
    <tr>
      <th>Name</th>
      <th>Jobs</th>
    </tr>
    <% resque.queues.sort_by { |q| q.to_s }.each do |queue| %>
    <tr>
      <td class='queue'><a class="queue" href="<%= u "queues/#{queue}" %>"><%= queue %></a></td>
      <td class='size'><%= resque.size queue %></td>
    </tr>
    <% end %>
    <% if failed_multiple_queues? %>
      <% Resque::Failure.queues.sort_by { |q| q.to_s }.each_with_index do |queue, i| %>
      <tr class="<%= Resque::Failure.count(queue).zero? ? "failed" : "failure" %><%= " first_failure" if i.zero? %>">
        <td class='queue failed'><a class="queue" href="<%= u "failed/#{queue}" %>"><%= queue %></a></td>
        <td class='size'><%= Resque::Failure.count(queue) %></td>
      </tr>
      <% end %>
    <% else %>
      <tr class="<%= Resque::Failure.count.zero? ? "failed" : "failure" %>">
        <td class='queue failed'><a class="queue" href="<%= u :failed %>">failed</a></td>
        <td class='size'><%= Resque::Failure.count %></td>
      </tr>
    <% end %>
  </table>

<% end %>
